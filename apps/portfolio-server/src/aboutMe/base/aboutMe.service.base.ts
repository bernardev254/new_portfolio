/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AboutMe as PrismaAboutMe } from "@prisma/client";

export class AboutMeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AboutMeCountArgs, "select">): Promise<number> {
    return this.prisma.aboutMe.count(args);
  }

  async aboutMes<T extends Prisma.AboutMeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AboutMeFindManyArgs>
  ): Promise<PrismaAboutMe[]> {
    return this.prisma.aboutMe.findMany<Prisma.AboutMeFindManyArgs>(args);
  }
  async aboutMe<T extends Prisma.AboutMeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AboutMeFindUniqueArgs>
  ): Promise<PrismaAboutMe | null> {
    return this.prisma.aboutMe.findUnique(args);
  }
  async createAboutMe<T extends Prisma.AboutMeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AboutMeCreateArgs>
  ): Promise<PrismaAboutMe> {
    return this.prisma.aboutMe.create<T>(args);
  }
  async updateAboutMe<T extends Prisma.AboutMeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AboutMeUpdateArgs>
  ): Promise<PrismaAboutMe> {
    return this.prisma.aboutMe.update<T>(args);
  }
  async deleteAboutMe<T extends Prisma.AboutMeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AboutMeDeleteArgs>
  ): Promise<PrismaAboutMe> {
    return this.prisma.aboutMe.delete(args);
  }
}
