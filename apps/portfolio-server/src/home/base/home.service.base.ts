/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Home as PrismaHome } from "@prisma/client";

export class HomeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HomeCountArgs, "select">): Promise<number> {
    return this.prisma.home.count(args);
  }

  async homes<T extends Prisma.HomeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeFindManyArgs>
  ): Promise<PrismaHome[]> {
    return this.prisma.home.findMany<Prisma.HomeFindManyArgs>(args);
  }
  async home<T extends Prisma.HomeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeFindUniqueArgs>
  ): Promise<PrismaHome | null> {
    return this.prisma.home.findUnique(args);
  }
  async createHome<T extends Prisma.HomeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeCreateArgs>
  ): Promise<PrismaHome> {
    return this.prisma.home.create<T>(args);
  }
  async updateHome<T extends Prisma.HomeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeUpdateArgs>
  ): Promise<PrismaHome> {
    return this.prisma.home.update<T>(args);
  }
  async deleteHome<T extends Prisma.HomeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeDeleteArgs>
  ): Promise<PrismaHome> {
    return this.prisma.home.delete(args);
  }
}
